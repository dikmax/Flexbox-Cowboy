[{"C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\index.js":"1","C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\reportWebVitals.js":"2","C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\App\\App.js":"3","C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\Navigation\\Navigation.js":"4","C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\Footer\\Footer.js":"5","C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\Content\\Display\\Display.js":"6","C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\Content\\Element\\InfoLevel.js":"7","C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\Content\\Element\\StartButton.js":"8","C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\Content\\Element\\Output.js":"9","C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\Content\\Element\\TextBtn.js":"10","C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\Content\\Element\\TitleHeader.js":"11","C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\Content\\ConteinerContent.js":"12","C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\Content\\ContentFunc\\ContentLogic.js":"13"},{"size":295,"mtime":1612084500357,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1609841205272,"results":"16","hashOfConfig":"15"},{"size":492,"mtime":1612604992806,"results":"17","hashOfConfig":"15"},{"size":403,"mtime":1612091729404,"results":"18","hashOfConfig":"15"},{"size":190,"mtime":1612128946052,"results":"19","hashOfConfig":"15"},{"size":441,"mtime":1612611499092,"results":"20","hashOfConfig":"15"},{"size":871,"mtime":1612457785125,"results":"21","hashOfConfig":"15"},{"size":477,"mtime":1612460307074,"results":"22","hashOfConfig":"15"},{"size":650,"mtime":1612470185106,"results":"23","hashOfConfig":"15"},{"size":774,"mtime":1612566398670,"results":"24","hashOfConfig":"15"},{"size":302,"mtime":1612458790673,"results":"25","hashOfConfig":"15"},{"size":5695,"mtime":1612700474000,"results":"26","hashOfConfig":"15"},{"size":3443,"mtime":1612688554383,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"urk3b4",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},"C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\index.js",[],["56","57"],"C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\reportWebVitals.js",[],"C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\App\\App.js",[],"C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\Navigation\\Navigation.js",[],"C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\Footer\\Footer.js",[],"C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\Content\\Display\\Display.js",[],"C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\Content\\Element\\InfoLevel.js",[],"C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\Content\\Element\\StartButton.js",[],"C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\Content\\Element\\Output.js",[],"C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\Content\\Element\\TextBtn.js",[],"C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\Content\\Element\\TitleHeader.js",[],"C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\Content\\ConteinerContent.js",[],"C:\\Users\\Home\\Desktop\\3CSS KOVBOY\\pet-project\\src\\Content\\ContentFunc\\ContentLogic.js",["58","59"],"import React from 'react';\r\n\r\n\r\nconst TransformTextForJsx  = (thisSetState) => {\r\n\r\n        try {\r\n          let clone = thisSetState.slice(0) // клонирую state\r\n          const separation = clone[2].task //убираю лишнии пробелы и точки с запятой\r\n            .replace(/\\s/g, '')\r\n            .split(';')\r\n            .filter(function (item) {\r\n              return item !== \"\";\r\n            });\r\n    \r\n          const transform = separation.map(function (item) { // убираю лишнее и делаю заглавные буквы\r\n    \r\n            return (item.split(':')[0])\r\n              .split('-')\r\n              .map(\r\n                (word, index) => index === 0 ? word : word[0].toUpperCase() + word.slice(1)\r\n              ).join('') + ':' + item.split(':')[1]\r\n          });\r\n    \r\n          const obj = transform.map(function (item) { // делаю подходящий для JSX формат.\r\n            const newObj = {};\r\n            newObj[item.split(':')[0]] = item.split(':')[1]\r\n            return newObj;\r\n          })\r\n          console.log(...obj)  \r\n        }\r\n    \r\n        catch {\r\n          console.log('logic working')\r\n        }\r\n      };\r\n      export default {TransformTextForJsx};\r\n\r\n    //   test2 = () => {\r\n\r\n    //     try {\r\n    //       let clone = this.state.level[this.state.chLevel].slice(0) // клонирую state\r\n    //       const separation = clone[2].task //убираю лишнии пробелы и точки с запятой\r\n    //         .replace(/\\s/g, '')\r\n    //         .split(';')\r\n    //         .filter(function (item) {\r\n    //           return item !== \"\";\r\n    //         });\r\n    \r\n    //       const transform = separation.map(function (item) { // убираю лишнее и делаю заглавные буквы\r\n    \r\n    //         return (item.split(':')[0])\r\n    //           .split('-')\r\n    //           .map(\r\n    //             (word, index) => index === 0 ? word : word[0].toUpperCase() + word.slice(1)\r\n    //           ).join('') + ':' + item.split(':')[1]\r\n    //       });\r\n    \r\n    //       const obj = transform.map(function (item) { // делаю подходящий для JSX формат.\r\n    //         const newObj = {};\r\n    //         newObj[item.split(':')[0]] = item.split(':')[1]\r\n    //         return newObj;\r\n    //       })\r\n    //       console.log(...obj)\r\n    //       this.setState({\r\n    //         textElem: obj[0]\r\n    //       })\r\n    //       console.log(this.state.level)\r\n        \r\n    //     }\r\n    \r\n    //     catch {\r\n    //       console.log('err test2 in outPut')\r\n    //     }\r\n    //   };",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":8,"nodeType":"66","messageId":"67","endLine":1,"endColumn":13},{"ruleId":"68","severity":1,"message":"69","line":41,"column":7,"nodeType":"70","endLine":41,"endColumn":44},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]